package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import dto.CommentDTO;
import dto.PostDTO;
import util.DBConnection;
import vo.PostVO;

public class CommentDAO {
	private Connection con;
	private PreparedStatement pstm;
	private ResultSet rs;
	
	// 해당 게시물 번호를 매개변수로 받아와서 댓글 목록 조회
	public List<PostDTO> selectCommentAll(int postNumber){
		String sql = "SELECT C.POST_NUMBER, POST_TITLE, POST_CONTENT, COMMENT_CONTENT, C.MEMBER_NUMBER\r\n"
				+ "FROM TBL_COMMNET C JOIN TBL_POST P\r\n"
				+ "ON C.POST_NUMBER = P.POST_NUMBER\r\n"
				+ "WHERE C.POST_NUMBER = ?";
		
		List<PostDTO> postdto = new ArrayList<>(); 
		
		try {
	         con = DBConnection.getConnection();
	         pstm = con.prepareStatement(sql);
	         pstm.setInt(1, postNumber);
	         rs = pstm.executeQuery();
	         
	         // 결과 목록이 여러 개 일 수도 있으니 while문 돌리기
	         while (rs.next()) {
	        	 PostDTO postDTO = new PostDTO();
	        	 postDTO.setPostNumber(rs.getInt(1));
	        	 postDTO.setPostTitle(rs.getString(2));
	        	 postDTO.setPostComment(rs.getNString(3));
	        	 postDTO.setCommentContent(rs.getString(4));
	        	 postDTO.setMemberNumber(rs.getInt(5));

		         postdto.add(postDTO);
		     }
	         
	      } catch (SQLException e) {
	         e.printStackTrace();
	         System.out.println("selectSequencepost() 실행 중 에러");
	      } finally {
	         try {
	            DBConnection.close(con, pstm, rs);
	         } catch (SQLException e) {
	            e.printStackTrace();
	            System.out.println("selectSequencepost() 닫는 도중 에러");
	         }
	      }
		return postdto;
	}
	
	// 회원번호를 받아와서 댓글 목록을 조회하는 메소드
	public List<CommentDTO> selectCommentOne(int memberNumber){
		String sql = "SELECT POST_TITLE, POST_CONTENT, T2.COMMENT_CONTENT, T2.MEMBER_NAME\r\n"
				+ "FROM TBL_POST T1 JOIN (\r\n"
				+ "	SELECT C.COMMENT_CONTENT, C.MEMBER_NUMBER, C.POST_NUMBER, M.MEMBER_NAME\r\n"
				+ "	FROM TBL_COMMENT C JOIN TBL_MEMBER M\r\n"
				+ "	ON C.MEMBER_NUMBER = M.MEMBER_NUMBER\r\n"
				+ "	WHERE C.MEMBER_NUMBER = ?) T2\r\n"
				+ "ON T1.POST_NUMBER = T2.POST_NUMBER";
		
		List<CommentDTO> commentdto = new ArrayList<>(); 
		
		try {
	         con = DBConnection.getConnection();
	         pstm = con.prepareStatement(sql);
	         pstm.setInt(1, memberNumber);
	         rs = pstm.executeQuery();
	         
	         // 결과 목록이 여러 개 일 수도 있으니 while문 돌리기
	         while (rs.next()) {
	        	 PostDTO postDTO = new PostDTO();
	        	 postDTO.setPostNumber(rs.getInt(1));
	        	 postDTO.setPostTitle(rs.getString(2));
	        	 postDTO.setPostComment(rs.getNString(3));
	        	 postDTO.setCommentContent(rs.getString(4));
	        	 postDTO.setMemberNumber(rs.getInt(5));

	        	 commentdto.add(postDTO);
		     }
	         
	      } catch (SQLException e) {
	         e.printStackTrace();
	         System.out.println("selectSequencepost() 실행 중 에러");
	      } finally {
	         try {
	            DBConnection.close(con, pstm, rs);
	         } catch (SQLException e) {
	            e.printStackTrace();
	            System.out.println("selectSequencepost() 닫는 도중 에러");
	         }
	      }
		return commentdto;
	}
}
